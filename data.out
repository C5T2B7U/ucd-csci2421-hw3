You know, I have one simple request. And that is to h-
ave sharks with frickin' laser beams attached to their-
 heads! Now evidently, my cycloptic colleague informs m-
e that that can't be done. Uh, can you remind me what I pay 
you people for? Honestly, throw me a bone here. What do we h-
ave? Ã¢â‚¬â€Dr. Evil Homework 3 Refer to the-
 documenting and submitting homework from here. Using the m-
ystring.h and mystring.cpp, (you're not supposed to use STL 
string for this homework) 1) implement a text file formatti-
ng program. It takes a text file data.txt as an input file. 
The file name can be hard-coded in your program or take a fi-
le name as a command line parameter. The file has a few line-
s of text but the length(column) of the line is arbitrary. O-
ne line could have anywhere between 1 to 200 characters befo-
re a new line (carriage return). Your program should ask the-
 number of column to the user and format the text file accor-
dingly. For example, if a user types 65, every line should b-
e aligned 65 long. You may have to combine two lines to one 
to eliminate the white spaces and blank lines, or split one 
to two. 2) in cases you need to change line in the middle o-
f a word, you need to use a hyphen (-) to connect a word bet-
ween two lines. 3) There should be no more than one white s-
pace between two words. Multiple spaces, newlines or tabs mu-
st be replaced with a space. You can assume that a hyphen c-
an be added after the maximum column. So if you're formattin-
g a text to 60 columns and a word is starting at the 60th co-
lumn, you can add hyphen at 61st. Only the hyphen can come a-
t 61st. For the output, display the formatted text on scree-
n and save it to data.out file. Hint: read Appendix F for 
the file I/O and string handling. You may find eat_white( ) 
function useful for removing white spaces. Read Standard C S-
tring & Character and use appropriate functions like strcpy,-
 strcat, memcmp etc. Grading guideline Correct and com-
plete functionality 70% Reasonable fault tolerance, i.e.-
 it should not crash often. 10% Makefile and Readme 10% 
Documentation and comments in the code 10% Due on Feb. 
15th at 4PM..